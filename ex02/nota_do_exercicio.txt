Definição:
nb ^ power → nb multiplicado por ele mesmo "power" vezes.


Exemplos:
    2 ^ 3 → 2 × 2 × 2 = 8
    5 ^ 0 → 1 (qualquer número elevado a zero dá 1)
    3 ^ 1 → 3
    0 ^ 0 → definido como 1 nesse exercício específico

ANALOGIA:
Pensar em nb ^ power é como dizer:
"power" é  “pega o número nb, e repetir a multiplicação power 
vezes por ele mesmo.” e retornar o resultado dessa repetida
multiplicação.


ft_iterative_power — Potência com loop
✅ Pontos positivos:
🔹 Mais eficiente em tempo de execução
🔹 Usa menos memória (sem empilhar chamadas)
🔹 Ideal para valores grandes, evita stack overflow
🔹 Fácil de controlar e depurar passo a passo

❌ Pontos negativos:
🔸 Menos elegante para representar definição matemática
🔸 Pode ficar mais verboso em alguns contextos

🧩 Quando usar:
    Em sistemas com restrição de memória
    Quando o foco é performance e robustez
    Em ambientes embarcados ou microcontroladores
    Em situações onde recursão é desnecessária ou arriscada


1️⃣ ft_power_double
   Descrição: Escreva uma função que calcula potências com base tipo double.
   - Aceita expoentes negativos
   - Retorna o resultado como double
   - Pode usar o operador *, mas não a função pow() da biblioteca

Prototipo:
    double ft_power_double(double base, int exponent);

2️⃣ ft_is_power_of_two
    Descrição: Escreva uma função que recebe um número inteiro n e retorna 1
    se ele for uma potência de dois, senão 0.

    - Exemplo: 8 → 1, 10 → 0
    - Não pode usar funções externas
    Prototipo:
    int ft_is_power_of_two(int n);


3️⃣ ft_nearest_power
    Descrição: Escreva uma função que recebe um número n e retorna a menor
    potência de 2 maior ou igual a n.
    - Exemplo: 5 → 8, 17 → 32
    - Pode usar laços, mas não bibliotecas externas
    Prototipo:
    int ft_nearest_power(int n);